{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Chictf-Writeups \u00b6","title":"\u9996\u9875"},{"location":"#welcome-to-chictf-writeups","text":"","title":"Welcome to Chictf-Writeups"},{"location":"misc/unpleasant_music/","text":"\u89e3\u9898\u601d\u8def \u00b6 \u521d\u59cb\u62ff\u5230\u4e00\u4e2a WAV \u6587\u4ef6\uff0c\u4f7f\u7528\u97f3\u9891\u7f16\u8f91\u8f6f\u4ef6\u6253\u5f00\uff0c\u53d1\u73b0\u662f\u4e00\u4e2a\u5355\u58f0\u9053\u97f3\u9891\uff0c\u6ce2\u5f62\u5e03\u6ee1\u4e86\u6574\u4e2a\u6846\u5495 \u65e2\u7136\u8fd9\u4e48\u6ee1\uff0c\u5c31\u770b\u770b\u9891\u8c31\u5427\u5495\u3002\u4f46\u662f\u5e76\u6ca1\u6709\u53d1\u73b0\uff0cSAD \u653e\u5927\u6ce2\u5f62\uff0c\u53d1\u73b0\u5176\u6709\u4e00\u5b9a\u7684\u89c4\u5f8b~\u50cf\u662f 01 \u5e8f\u5217 \u624b\u52a8\u89e3\u7801\u662f\u4e0d\u53ef\u80fd\u7684\u5495\uff0c\u5199\u4e2a\u7a0b\u5e8f\u8dd1\u4e00\u4e0b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 import wave , codecs import numpy as np wavfile = wave . open ( u 'music.wav' , \"rb\" ) params = wavfile . getparams () nframes = params [ 3 ] # \u91c7\u6837\u70b9\u6570 datawav = wavfile . readframes ( nframes ) # \u8bfb\u53d6\u97f3\u9891\uff0c\u5b57\u7b26\u4e32\u683c\u5f0f wavfile . close () datause = np . fromstring ( datawav , dtype = np . short ) # \u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u77ed\u6574\u578b result_bin , result_hex = '' , '' mx = 0 for i in range ( len ( datause ) - 1 ): if datause [ i ] > mx : mx = datause [ i ] try : if ( datause [ i ] < 0 and datause [ i + 1 ] >= 0 ): if ( mx - 24000 > 0 ): result_bin += '1' mx = datause [ i + 1 ] else : result_bin += '0' mx = datause [ i + 1 ] except : break for i in range ( 0 , len ( result_bin ), 4 ): result_hex += hex ( int ( result_bin [ i : i + 4 ], 2 ))[ 2 :] # result_hex \u5f00\u5934\u4e3a Rar file_rar = open ( \"result.rar\" , \"wb\" ) file_rar . write ( codecs . decode ( result_hex , 'hex_codec' )) file_rar . close () \u751f\u6210\u7684 RAR \u91cc\u9762\u6709\u4e00\u4e2a nnnnoflag.txt \uff0c\u91cc\u9762\u6ca1\u6709 flag \u554a\u5495\uff01\uff08\u6380\u684c \u4e25\u8083\uff09RAR \u7531\u53ef\u53d8\u957f\u7684\u5757\u7ec4\u6210\uff0c\u8fd9\u4e9b\u5757\u7684\u6ca1\u6709\u56fa\u5b9a\u7684\u5148\u540e\u987a\u5e8f\uff0c\u4f46\u8981\u6c42\u7b2c\u4e00\u4e2a\u5757\u5fc5\u987b\u662f\u6807\u5fd7\u5757\u5e76\u4e14\u5176\u540e\u7d27\u8ddf\u4e00\u4e2a\u5f52\u6863\u5934\u90e8\u5757\u3002\u6bcf\u4e2a\u5757\u5747\u4ee5\u4ee5\u4e0b\u5b57\u6bb5\u5f00\u5934 \u540d\u79f0 \u5927\u5c0f \u63cf\u8ff0 HEAD_CRC 2 bytes CRC of total block or block part HEAD_TYPE 1 byte Block type HEAD_FLAGS 2 bytes Block flags HEAD_SIZE 2 bytes Block size ADD_SIZE 4 bytes Optional field \u2013 added block size HEAD_TYPE \u7684\u503c\u53ca\u5bf9\u5e94\u7684\u5757\u7c7b\u578b HEAD_TYPE \u63cf\u8ff0 0x72 marker block 0x73 archive header 0x74 file header 0x75 old style comment header 0x76 old style authenticity information 0x77 old style subblock 0x78 old style recovery record 0x79 old style authenticity information 0x7a subblock 0x7b terminator \u7528 010 Editor \u6253\u5f00 result.rar \u53d1\u73b0\u6709\u4e00\u5757\u7684 HEAD_TYPE \u662f 0x7a \u60f3\u6765\u8fd9\u5e94\u8be5\u4e0d\u662f\u5e38\u89c1\u7684\u5757\u7c7b\u578b\uff0c\u524d\u9762\u5df2\u7ecf\u51fa\u73b0\u4e86\u6807\u5fd7\u5757\u548c\u5f52\u6863\u5934\u90e8\u5757\uff0c\u5c31\u6539\u6210 0x74 \u8bd5\u8bd5\u5495\u3002\u8bf6\u563f\u563f~ RAR \u6587\u4ef6\u91cc\u9762\u51fa\u73b0\u4e86\u4e00\u4e2a STM \u6587\u4ef6 \u7528 file \u770b\u770b\u5495~\u53d1\u73b0\u662f PNG \u6587\u4ef6\uff0c\u4fee\u6539\u4e00\u4e0b\u6587\u4ef6\u540e\u7f00\uff0c\u5f97\u5230\u4e00\u4e2a\u88ab\u622a\u6389\u4e00\u534a\u7684\u4e8c\u7ef4\u7801 \u7136\u540e\u5e38\u89c4\u64cd\u4f5c\u6539\u4e00\u4e0b PNG \u56fe\u7247\u7684\u9ad8\u5c31\u53ef\u4ee5\u4e86\u5495~\u2b50\u626b\u63cf\u4e8c\u7ef4\u7801\u5f97\u5230 flag\uff01 \u53c2\u8003\u8d44\u6599 \u00b6 RAR - Forensics Wiki","title":"Unpleasant_music"},{"location":"misc/unpleasant_music/#_1","text":"\u521d\u59cb\u62ff\u5230\u4e00\u4e2a WAV \u6587\u4ef6\uff0c\u4f7f\u7528\u97f3\u9891\u7f16\u8f91\u8f6f\u4ef6\u6253\u5f00\uff0c\u53d1\u73b0\u662f\u4e00\u4e2a\u5355\u58f0\u9053\u97f3\u9891\uff0c\u6ce2\u5f62\u5e03\u6ee1\u4e86\u6574\u4e2a\u6846\u5495 \u65e2\u7136\u8fd9\u4e48\u6ee1\uff0c\u5c31\u770b\u770b\u9891\u8c31\u5427\u5495\u3002\u4f46\u662f\u5e76\u6ca1\u6709\u53d1\u73b0\uff0cSAD \u653e\u5927\u6ce2\u5f62\uff0c\u53d1\u73b0\u5176\u6709\u4e00\u5b9a\u7684\u89c4\u5f8b~\u50cf\u662f 01 \u5e8f\u5217 \u624b\u52a8\u89e3\u7801\u662f\u4e0d\u53ef\u80fd\u7684\u5495\uff0c\u5199\u4e2a\u7a0b\u5e8f\u8dd1\u4e00\u4e0b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 import wave , codecs import numpy as np wavfile = wave . open ( u 'music.wav' , \"rb\" ) params = wavfile . getparams () nframes = params [ 3 ] # \u91c7\u6837\u70b9\u6570 datawav = wavfile . readframes ( nframes ) # \u8bfb\u53d6\u97f3\u9891\uff0c\u5b57\u7b26\u4e32\u683c\u5f0f wavfile . close () datause = np . fromstring ( datawav , dtype = np . short ) # \u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u77ed\u6574\u578b result_bin , result_hex = '' , '' mx = 0 for i in range ( len ( datause ) - 1 ): if datause [ i ] > mx : mx = datause [ i ] try : if ( datause [ i ] < 0 and datause [ i + 1 ] >= 0 ): if ( mx - 24000 > 0 ): result_bin += '1' mx = datause [ i + 1 ] else : result_bin += '0' mx = datause [ i + 1 ] except : break for i in range ( 0 , len ( result_bin ), 4 ): result_hex += hex ( int ( result_bin [ i : i + 4 ], 2 ))[ 2 :] # result_hex \u5f00\u5934\u4e3a Rar file_rar = open ( \"result.rar\" , \"wb\" ) file_rar . write ( codecs . decode ( result_hex , 'hex_codec' )) file_rar . close () \u751f\u6210\u7684 RAR \u91cc\u9762\u6709\u4e00\u4e2a nnnnoflag.txt \uff0c\u91cc\u9762\u6ca1\u6709 flag \u554a\u5495\uff01\uff08\u6380\u684c \u4e25\u8083\uff09RAR \u7531\u53ef\u53d8\u957f\u7684\u5757\u7ec4\u6210\uff0c\u8fd9\u4e9b\u5757\u7684\u6ca1\u6709\u56fa\u5b9a\u7684\u5148\u540e\u987a\u5e8f\uff0c\u4f46\u8981\u6c42\u7b2c\u4e00\u4e2a\u5757\u5fc5\u987b\u662f\u6807\u5fd7\u5757\u5e76\u4e14\u5176\u540e\u7d27\u8ddf\u4e00\u4e2a\u5f52\u6863\u5934\u90e8\u5757\u3002\u6bcf\u4e2a\u5757\u5747\u4ee5\u4ee5\u4e0b\u5b57\u6bb5\u5f00\u5934 \u540d\u79f0 \u5927\u5c0f \u63cf\u8ff0 HEAD_CRC 2 bytes CRC of total block or block part HEAD_TYPE 1 byte Block type HEAD_FLAGS 2 bytes Block flags HEAD_SIZE 2 bytes Block size ADD_SIZE 4 bytes Optional field \u2013 added block size HEAD_TYPE \u7684\u503c\u53ca\u5bf9\u5e94\u7684\u5757\u7c7b\u578b HEAD_TYPE \u63cf\u8ff0 0x72 marker block 0x73 archive header 0x74 file header 0x75 old style comment header 0x76 old style authenticity information 0x77 old style subblock 0x78 old style recovery record 0x79 old style authenticity information 0x7a subblock 0x7b terminator \u7528 010 Editor \u6253\u5f00 result.rar \u53d1\u73b0\u6709\u4e00\u5757\u7684 HEAD_TYPE \u662f 0x7a \u60f3\u6765\u8fd9\u5e94\u8be5\u4e0d\u662f\u5e38\u89c1\u7684\u5757\u7c7b\u578b\uff0c\u524d\u9762\u5df2\u7ecf\u51fa\u73b0\u4e86\u6807\u5fd7\u5757\u548c\u5f52\u6863\u5934\u90e8\u5757\uff0c\u5c31\u6539\u6210 0x74 \u8bd5\u8bd5\u5495\u3002\u8bf6\u563f\u563f~ RAR \u6587\u4ef6\u91cc\u9762\u51fa\u73b0\u4e86\u4e00\u4e2a STM \u6587\u4ef6 \u7528 file \u770b\u770b\u5495~\u53d1\u73b0\u662f PNG \u6587\u4ef6\uff0c\u4fee\u6539\u4e00\u4e0b\u6587\u4ef6\u540e\u7f00\uff0c\u5f97\u5230\u4e00\u4e2a\u88ab\u622a\u6389\u4e00\u534a\u7684\u4e8c\u7ef4\u7801 \u7136\u540e\u5e38\u89c4\u64cd\u4f5c\u6539\u4e00\u4e0b PNG \u56fe\u7247\u7684\u9ad8\u5c31\u53ef\u4ee5\u4e86\u5495~\u2b50\u626b\u63cf\u4e8c\u7ef4\u7801\u5f97\u5230 flag\uff01","title":"\u89e3\u9898\u601d\u8def"},{"location":"misc/unpleasant_music/#_2","text":"RAR - Forensics Wiki","title":"\u53c2\u8003\u8d44\u6599"}]}